import html
import os

from telegram import ParseMode
from telegram.error import BadRequest
from telegram.ext import CommandHandler, Filters, MessageHandler
from telegram.ext.dispatcher import run_async
from telegram.utils.helpers import mention_html

from ubotindo import dispatcher
from ubotindo.modules.connection import connected
from ubotindo.modules.disable import DisableAbleCommandHandler
from ubotindo.modules.helper_funcs.admin_rights import (
    user_can_changeinfo,
    user_can_pin,
    user_can_promote,
)
from ubotindo.modules.helper_funcs.alternate import typing_action
from ubotindo.modules.helper_funcs.chat_status import (
    bot_admin,
    can_pin,
    can_promote,
    user_admin,
)
from ubotindo.modules.helper_funcs.extraction import extract_user, extract_user_and_text
from ubotindo.modules.log_channel import loggable
from ubotindo.modules.sql import admin_sql as sql


@run_async
@bot_admin
@can_promote
@user_admin
@loggable
@typing_action
def promote(update, context):
    chat_id = update.effective_chat.id
    message = update.effective_message
    chat = update.effective_chat
    user = update.effective_user
    args = context.args

    if user_can_promote(chat, user, context.bot.id) is False:
        message.reply_text("‚ö†Ô∏è‡¥ï‡µç‡¥∑‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Ç..‡¥Ü‡¥∞‡µÜ‡¥Ø‡µÅ‡¥Ç ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ü‡¥ï‡µç‡¥ï‡µÅ‡¥µ‡¥æ‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥á‡¥≤‡µç‡¥≤..!")
        return ""

    user_id = extract_user(message, args)
    if not user_id:
        message.reply_text("‡¥Ü‡¥∞‡µÜ‡¥Ø‡¥æ‡¥£‡µç ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ü‡¥ï‡µç‡¥ï‡µá‡¥£‡µç‡¥ü‡¥§‡µç?ü§î")
        return ""

    user_member = chat.get_member(user_id)
    if user_member.status == "administrator" or user_member.status == "creator":
        message.reply_text("üôÑ ‡¥Ü‡µæ‡¥±‡µÜ‡¥°‡¥ø ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ü‡¥£‡µç..!")
        return ""

    if user_id == context.bot.id:
        message.reply_text("üôÑ‡¥û‡¥æ‡µª ‡¥é‡¥®‡µç‡¥®‡µÜ‡¥§‡µç‡¥§‡¥®‡µç‡¥®‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ü‡¥ï‡µç‡¥ï‡µÅ‡¥µ‡¥æ‡¥®‡µã?!")
        return ""

    # set same perms as bot - bot can't assign higher perms than itself!
    bot_member = chat.get_member(context.bot.id)

    context.bot.promoteChatMember(
        chat_id,
        user_id,
        can_change_info=bot_member.can_change_info,
        can_post_messages=bot_member.can_post_messages,
        can_edit_messages=bot_member.can_edit_messages,
        can_delete_messages=bot_member.can_delete_messages,
        can_invite_users=bot_member.can_invite_users,
        can_restrict_members=bot_member.can_restrict_members,
        can_pin_messages=bot_member.can_pin_messages,
    )

    message.reply_text("üëç‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ü‡¥ï‡µç‡¥ï‡¥ø‡¥Ø‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥£‡µç‡¥ü‡µç...")
    return (
        "<b>{}:</b>"
        "\n#PROMOTED"
        "\n<b>Admin:</b> {}"
        "\n<b>User:</b> {}".format(
            html.escape(chat.title),
            mention_html(user.id, user.first_name),
            mention_html(user_member.user.id, user_member.user.first_name),
        )
    )


@run_async
@bot_admin
@can_promote
@user_admin
@loggable
@typing_action
def demote(update, context):
    chat = update.effective_chat
    message = update.effective_message
    user = update.effective_user
    args = context.args

    if user_can_promote(chat, user, context.bot.id) is False:
        message.reply_text("‚ö†Ô∏è ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Ö‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥™‡µÜ‡µº‡¥Æ‡¥ø‡¥∑‡µª ‡¥á‡¥≤‡µç‡¥≤..!")
        return ""

    user_id = extract_user(message, args)
    if not user_id:
        message.reply_text("üôÑ‡¥é‡¥®‡µç‡¥§‡µã‡¥®‡µç‡¥®‡µÜ‡¥ü‡µÜ?.")
        return ""

    user_member = chat.get_member(user_id)
    if user_member.status == "creator":
        message.reply_text("‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥Æ‡µÅ‡¥§‡¥≤‡¥æ‡¥≥‡¥ø‡¥Ø‡µÜ ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥∏‡µç‡¥•‡¥æ‡¥®‡¥§‡µç‡¥§‡µç ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡µÅ‡¥Ç..üò°")
        return ""

    if not user_member.status == "administrator":
        message.reply_text(
            "‡¥é‡¥ü‡µÜ ‡¥Æ‡¥£‡µç‡¥£‡µÅ‡¥£‡µç‡¥£‡¥ø..‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ö‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µç‡¥§ ‡¥í‡¥∞‡¥æ‡¥≥‡µÜ ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ö‡¥≤‡µç‡¥≤‡¥æ‡¥§‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥Ç..‡¥Æ‡¥£‡µç‡¥ü‡µª ‡¥Ü‡¥£‡µã ‡¥®‡µÄ..üëª!"
        )
        return ""

    if user_id == context.bot.id:
        message.reply_text("üòú ‡¥á‡¥≤‡µç‡¥≤...‡¥í‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥≤‡µÅ‡¥Ç ‡¥û‡¥æ‡µª ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥ø‡¥≤‡µç‡¥≤..!")
        return ""

    try:
        context.bot.promoteChatMember(
            int(chat.id),
            int(user_id),
            can_change_info=False,
            can_post_messages=False,
            can_edit_messages=False,
            can_delete_messages=False,
            can_invite_users=False,
            can_restrict_members=False,
            can_pin_messages=False,
        )
        message.reply_text("üòÅ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥∏‡µç‡¥•‡¥æ‡¥®‡¥§‡µç‡¥§‡µÅ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥í‡¥¥‡¥ø‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡¥ø‡¥Ø‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥£‡µç‡¥ü‡µç!")
        return (
            "<b>{}:</b>"
            "\n#DEMOTED"
            "\n<b>Admin:</b> {}"
            "\n<b>User:</b> {}".format(
                html.escape(chat.title),
                mention_html(user.id, user.first_name),
                mention_html(user_member.user.id, user_member.user.first_name),
            )
        )

    except BadRequest:
        message.reply_text(
            "‡¥π‡¥æ‡¥Ø‡µç ‡¥Æ‡¥£‡µç‡¥£‡µÅ‡¥£‡µç‡¥£‡¥ø... ‡¥û‡¥æ‡µª ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ö‡¥≤‡µç‡¥≤‡¥æ‡¥§‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µã , ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥Ö‡¥Ø‡¥æ‡¥≥‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ü‡¥ï‡µç‡¥ï‡¥ø‡¥Ø‡¥§‡µç ‡¥µ‡µá‡¥±‡µÜ ‡¥Ü‡¥∞‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥Ü‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µã "
            "‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡¥æ‡µΩ ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥í‡¥®‡µç‡¥®‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡µª ‡¥™‡¥±‡µç‡¥±‡¥ø‡¥≤‡µç‡¥≤ üòë!")
        return ""


@run_async
@bot_admin
@can_pin
@user_admin
@loggable
@typing_action
def pin(update, context):
    args = context.args
    user = update.effective_user
    chat = update.effective_chat
    message = update.effective_message

    is_group = chat.type != "private" and chat.type != "channel"

    prev_message = update.effective_message.reply_to_message

    if user_can_pin(chat, user, context.bot.id) is False:
        message.reply_text("‚ö†Ô∏è ‡¥§‡¥æ‡¥ô‡µç‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Æ‡µÜ‡¥∏‡µç‡¥∏‡µá‡¥ú‡µç ‡¥™‡¥ø‡µª ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Æ‡¥ø‡¥≤‡µç‡¥≤.. !")
        return ""

    is_silent = True
    if len(args) >= 1:
        is_silent = not (
            args[0].lower() == "notify"
            or args[0].lower() == "loud"
            or args[0].lower() == "violent"
        )

    if prev_message and is_group:
        try:
            context.bot.pinChatMessage(
                chat.id,
                prev_message.message_id,
                disable_notification=is_silent)
        except BadRequest as excp:
            if excp.message == "Chat_not_modified":
                pass
            else:
                raise
        return (
            "<b>{}:</b>"
            "\n#PINNED"
            "\n<b>Admin:</b> {}".format(
                html.escape(chat.title), mention_html(user.id, user.first_name)
            )
        )

    return ""


@run_async
@bot_admin
@can_pin
@user_admin
@loggable
@typing_action
def unpin(update, context):
    chat = update.effective_chat
    user = update.effective_user
    message = update.effective_message

    if user_can_pin(chat, user, context.bot.id) is False:
        message.reply_text("‚ö†Ô∏è ‡¥§‡¥æ‡¥ô‡µç‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Æ‡µÜ‡¥∏‡µç‡¥∏‡µá‡¥ú‡µç ‡¥Ö‡µ∫‡¥™‡¥ø‡µª ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Æ‡¥ø‡¥≤‡µç‡¥≤ !")
        return ""

    try:
        context.bot.unpinChatMessage(chat.id)
    except BadRequest as excp:
        if excp.message == "Chat_not_modified":
            pass
        else:
            raise

    return (
        "<b>{}:</b>"
        "\n#UNPINNED"
        "\n<b>Admin:</b> {}".format(
            html.escape(chat.title), mention_html(user.id, user.first_name)
        )
    )


@run_async
@bot_admin
@user_admin
@typing_action
def invite(update, context):
    user = update.effective_user
    msg = update.effective_message
    chat = update.effective_chat
    context.args

    conn = connected(context.bot, update, chat, user.id, need_admin=True)
    if conn:
        chat = dispatcher.bot.getChat(conn)
    else:
        if msg.chat.type == "private":
            msg.reply_text("‡¥à ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µç ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ï‡µç‡¥ï‡µá‡¥£‡µç‡¥ü‡¥§‡µç ‡¥á‡¥µ‡¥ø‡¥ü‡µÜ ‡¥Ö‡¥≤‡µç‡¥≤.. ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡µΩ ‡¥Ü‡¥£‡µç..")
            return ""
        chat = update.effective_chat

    if chat.username:
        msg.reply_text(chat.username)
    elif chat.type == chat.SUPERGROUP or chat.type == chat.CHANNEL:
        bot_member = chat.get_member(context.bot.id)
        if bot_member.can_invite_users:
            invitelink = context.bot.exportChatInviteLink(chat.id)
            msg.reply_text(invitelink)
        else:
            msg.reply_text(
                "‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µç ‡¥é‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥µ‡¥æ‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Ç ‡¥á‡¥≤‡µç‡¥≤ üòí!"
            )
    else:
        msg.reply_text(
            "‡¥∏‡µã‡¥±‡¥ø.. ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µç ‡¥§‡¥∞‡¥£‡¥Æ‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥í‡¥®‡µç‡¥®‡µÅ‡¥ï‡¥ø‡µΩ ‡¥∏‡µÇ‡¥™‡µç‡¥™‡µº ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥Ü‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Ç..‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥ö‡¥æ‡¥®‡µΩ ‡¥Ü‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Ç..!"
        )


@run_async
@typing_action
def adminlist(update, context):
    administrators = update.effective_chat.get_administrators()
    text = "üí°‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª‡¥∏‡µç in <b>{}</b>:".format(
        update.effective_chat.title or "this chat")
    for admin in administrators:
        user = admin.user
        status = admin.status
        name = f"{(mention_html(user.id, user.first_name))}"
        if status == "creator":
            text += "\n üå≥ ‡¥â‡¥ü‡¥Æ‡¥∏‡µç‡¥•‡µª üî•:"
            text += "\n ‚Ä¢ {} \n\n üå± ‡¥Æ‡¥±‡µç‡¥±‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª‡¥∏‡µç:".format(name)
    for admin in administrators:
        user = admin.user
        status = admin.status
        name = f"{(mention_html(user.id, user.first_name))}"
        if status == "administrator":
            text += "\n ‚Ä¢ {}".format(name)
    update.effective_message.reply_text(text, parse_mode=ParseMode.HTML)


@run_async
@bot_admin
@can_promote
@user_admin
@typing_action
def set_title(update, context):
    args = context.args
    chat = update.effective_chat
    message = update.effective_message

    user_id, title = extract_user_and_text(message, args)
    try:
        user_member = chat.get_member(user_id)
    except Exception:
        return

    if not user_id:
        message.reply_text("‡¥í‡¥∞‡¥æ‡¥≥‡µÜ ‡¥∏‡µÇ‡¥ö‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ö‡µç‡¥ö‡µÅ ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µç ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï.")
        return

    if user_member.status == "creator":
        message.reply_text(
            "‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥ì‡¥£‡¥±‡µÅ‡¥ü‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡µÅ‡¥µ‡¥æ‡µª ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥∏‡¥æ‡¥ß‡¥ø‡¥ï‡µç‡¥ï‡¥ø‡¥≤‡µç‡¥≤.."
        )
        return

    if not user_member.status == "administrator":
        message.reply_text(
            "‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥Ö‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µç‡¥§ ‡¥í‡¥∞‡¥æ‡¥≥‡¥ø‡¥®‡µç ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥ï‡µä‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥ï‡¥¥‡¥ø‡¥Ø‡¥ø‡¥≤‡µç‡¥≤ ‡¥Æ‡¥£‡µç‡¥£‡µÅ‡¥£‡µç‡¥£‡¥ø..!"
        )
        return

    if user_id == context.bot.id:
        message.reply_text(
            "‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥§‡¥®‡µç‡¥®‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥ö‡µá‡¥û‡µç‡¥ö‡µç‚Äå ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡µª ‡¥∏‡¥æ‡¥ß‡¥ø‡¥ï‡µç‡¥ï‡¥ø‡¥≤‡µç‡¥≤.."
        )
        return

    if not title:
        message.reply_text("‡¥é‡¥®‡µç‡¥§‡µç ‡¥â‡¥£‡µç‡¥ü‡¥Ø‡¥æ‡¥£‡µç ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥Ü‡¥Ø‡¥ø ‡¥ï‡µä‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µá‡¥£‡µç‡¥ü‡¥§‡µç üò°!")
        return

    if len(title) > 16:
        message.reply_text(
            "‡¥á‡¥§‡µç‡¥∞‡¥Ø‡µÅ‡¥Ç ‡¥®‡µÄ‡¥≥‡¥Æ‡µÅ‡¥≥‡µç‡¥≥ ‡¥ü‡µÜ‡¥ï‡µç‡¥∏‡µç‡¥±‡µç‡¥±‡µç‚Äå ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥Ü‡¥Ø‡¥ø ‡¥®‡µΩ‡¥ï‡¥æ‡µª ‡¥∏‡¥æ‡¥ß‡¥ø‡¥ï‡µç‡¥ï‡¥ø‡¥≤‡µç‡¥≤.."
        )

    try:
        context.bot.set_chat_administrator_custom_title(
            chat.id, user_id, title)
        message.reply_text(
            "‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥ø‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ.. <b>{}</b> to <code>{}</code>!".format(
                user_member.user.first_name or user_id, title[:16]
            ),
            parse_mode=ParseMode.HTML,
        )

    except BadRequest:
        message.reply_text(
            "‡¥û‡¥æ‡µª ‡¥™‡µç‡¥∞‡µä‡¥Æ‡µã‡¥ü‡µç‡¥ü‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥§‡µç‡¥§ ‡¥Ü‡¥≥‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥æ‡µª ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥∏‡¥æ‡¥ß‡¥ø‡¥ï‡µç‡¥ï‡¥ø‡¥≤‡µç‡¥≤..!")


@run_async
@bot_admin
@user_admin
@typing_action
def setchatpic(update, context):
    chat = update.effective_chat
    msg = update.effective_message
    user = update.effective_user

    if user_can_changeinfo(chat, user, context.bot.id) is False:
        msg.reply_text("‡¥∏‡µã‡¥±‡¥ø.. ‡¥§‡¥æ‡¥ô‡µç‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥á‡µª‡¥´‡µã‡¥Ø‡¥ø‡µΩ ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥Ç ‡¥µ‡¥∞‡µÅ‡¥§‡µç‡¥§‡¥æ‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Æ‡¥ø‡¥≤‡µç‡¥≤..!")
        return

    if msg.reply_to_message:
        if msg.reply_to_message.photo:
            pic_id = msg.reply_to_message.photo[-1].file_id
        elif msg.reply_to_message.document:
            pic_id = msg.reply_to_message.document.file_id
        else:
            msg.reply_text("You can only set some photo as chat pic!")
            return
        dlmsg = msg.reply_text("‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥ï‡¥æ‡¥§‡µç‡¥§‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï...‚è≥Ô∏è")
        tpic = context.bot.get_file(pic_id)
        tpic.download("gpic.png")
        try:
            with open("gpic.png", "rb") as chatp:
                context.bot.set_chat_photo(int(chat.id), photo=chatp)
                msg.reply_text("‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç‡¥±‡µÜ‚Äå ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥™‡¥ø‡¥ï‡µç‡¥ö‡µº ‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥ø‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ..")
        except BadRequest as excp:
            msg.reply_text(f"Error! {excp.message}")
        finally:
            dlmsg.delete()
            if os.path.isfile("gpic.png"):
                os.remove("gpic.png")
    else:
        msg.reply_text("‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥á‡¥Æ‡µá‡¥ú‡¥ø‡¥®‡µÅ ‡¥Æ‡¥±‡µÅ‡¥™‡¥ü‡¥ø‡¥Ø‡¥æ‡¥Ø‡¥ø ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µç ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï..!")


@run_async
@bot_admin
@user_admin
@typing_action
def rmchatpic(update, context):
    chat = update.effective_chat
    msg = update.effective_message
    user = update.effective_user

    if user_can_changeinfo(chat, user, context.bot.id) is False:
        msg.reply_text("‡¥∏‡µã‡¥±‡¥ø.. ‡¥§‡¥ô‡µç‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Ö‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Æ‡¥ø‡¥≤‡µç‡¥≤..")
        return
    try:
        context.bot.delete_chat_photo(int(chat.id))
        msg.reply_text("‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥™‡¥ø‡¥ï‡µç‡¥ö‡µº ‡¥±‡¥ø‡¥Æ‡µÇ‡¥µ‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ..!")
    except BadRequest as excp:
        msg.reply_text(f"Error! {excp.message}.")
        return


@run_async
@bot_admin
@user_admin
@typing_action
def setchat_title(update, context):
    chat = update.effective_chat
    msg = update.effective_message
    user = update.effective_user
    args = context.args

    if user_can_changeinfo(chat, user, context.bot.id) is False:
        msg.reply_text("‡¥∏‡µã‡¥±‡¥ø.. ‡¥§‡¥æ‡¥ô‡µç‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥à ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µç ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Æ‡¥ø‡¥≤‡µç‡¥≤..")
        return

    title = " ".join(args)
    if not title:
        msg.reply_text("‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥®‡µÜ‡¥Ø‡¥ø‡¥Ç ‡¥ï‡µÇ‡¥ü‡¥ø ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡¥ø‡¥®‡µä‡¥™‡µç‡¥™‡¥Ç ‡¥Ö‡¥Ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï..")
        return

    try:
        context.bot.set_chat_title(int(chat.id), str(title))
        msg.reply_text(
            f"‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø <b>{title}</b> ‡¥é‡¥®‡µç‡¥®‡¥§‡µç ‡¥™‡µÅ‡¥§‡¥ø‡¥Ø ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥®‡µÜ‡¥Ø‡¥ø‡¥Ç ‡¥Ü‡¥Ø‡¥ø ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ.. !",
            parse_mode=ParseMode.HTML,
        )
    except BadRequest as excp:
        msg.reply_text(f"Error! {excp.message}.")
        return


@run_async
@bot_admin
@user_admin
@typing_action
def set_sticker(update, context):
    msg = update.effective_message
    chat = update.effective_chat
    user = update.effective_user

    if user_can_changeinfo(chat, user, context.bot.id) is False:
        return msg.reply_text("‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥á‡µª‡¥´‡µã ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Ç ‡¥§‡¥æ‡¥ô‡µç‡¥ï‡µæ‡¥ï‡µç‡¥ï‡¥ø‡¥≤‡µç‡¥≤..!")

    if msg.reply_to_message:
        if not msg.reply_to_message.sticker:
            return msg.reply_text(
                "‡¥∏‡µç‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç‡¥ï‡¥±‡µÅ‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Æ‡¥±‡µÅ‡¥™‡¥ü‡¥ø‡¥Ø‡¥æ‡¥Ø‡¥ø ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µç ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï..!"
            )
        stkr = msg.reply_to_message.sticker.set_name
        try:
            context.bot.set_chat_sticker_set(chat.id, stkr)
            msg.reply_text(
                f"‡¥µ‡¥ø‡¥ú‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥∏‡µç‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç‡¥ï‡µº‡¥™‡¥æ‡¥ï‡µç‡¥ï‡µç {chat.title} ‡¥é‡¥®‡µç‡¥® ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡µΩ ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ..!")
        except BadRequest as excp:
            if excp.message == "Participants_too_few":
                return msg.reply_text(
                    "‡¥∏‡µã‡¥±‡¥ø... ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡µΩ ‡¥ï‡µÅ‡¥±‡¥û‡µç‡¥û‡¥§‡µç 100 ‡¥Æ‡µÜ‡¥Ç‡¥¨‡µá‡µº‡¥∏‡µç ‡¥â‡¥£‡µç‡¥ü‡¥æ‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Ç..!"
                )
            msg.reply_text(f"Error! {excp.message}.")
    else:
        msg.reply_text(
            "‡¥∏‡µç‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç‡¥ï‡¥±‡µÅ‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Æ‡¥±‡µÅ‡¥™‡¥ü‡¥ø‡¥Ø‡¥æ‡¥Ø‡¥ø ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï..")


@run_async
@bot_admin
@user_admin
@typing_action
def set_desc(update, context):
    msg = update.effective_message
    chat = update.effective_chat
    user = update.effective_user

    if user_can_changeinfo(chat, user, context.bot.id) is False:
        return msg.reply_text("‡¥∏‡µã‡¥±‡¥ø.. ‡¥§‡¥æ‡¥ô‡µç‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥á‡µª‡¥´‡µã ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥æ‡¥∞‡¥Æ‡¥ø‡¥≤‡µç‡¥≤ !")

    tesc = msg.text.split(None, 1)
    if len(tesc) >= 2:
        desc = tesc[1]
    else:
        return msg.reply_text("‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡¥ø‡¥®‡µä‡¥™‡µç‡¥™‡¥Ç ‡¥µ‡¥ø‡¥µ‡¥∞‡¥£‡¥Ç ‡¥ï‡µÇ‡¥ü‡¥ø ‡¥Ö‡¥Ø‡¥ö‡µç‡¥ö‡¥æ‡µΩ ‡¥Æ‡¥æ‡¥§‡µç‡¥∞‡¥Æ‡µá ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥Ç ‡¥µ‡¥∞‡µÅ‡¥§‡µç‡¥§‡¥æ‡µª ‡¥∏‡¥æ‡¥ß‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥≥‡µç‡¥≥‡µÇ..!")
    try:
        if len(desc) > 255:
            return msg.reply_text(
                "‡¥µ‡¥ø‡¥µ‡¥∞‡¥£‡¥Ç 255 ‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥≥‡¥ø‡µΩ ‡¥ï‡µÇ‡¥ü‡¥æ‡µª ‡¥™‡¥æ‡¥ü‡¥ø‡¥≤‡µç‡¥≤..!")
        context.bot.set_chat_description(chat.id, desc)
        msg.reply_text(
            f"‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø {chat.title} ‡¥é‡¥®‡µç‡¥® ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥µ‡¥ø‡¥µ‡¥∞‡¥£‡¥Ç ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ..!")
    except BadRequest as excp:
        msg.reply_text(f"Error! {excp.message}.")


def __chat_settings__(chat_id, user_id):
    return "You are *admin*: `{}`".format(
        dispatcher.bot.get_chat_member(chat_id, user_id).status
        in ("administrator", "creator")
    )


__help__ = """
 ‚ùí /adminlist: ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥≤‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª‡¥∏‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥≤‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥≤‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ..

*‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª‡¥∏‡µç ‡¥Æ‡¥æ‡¥§‡µç‡¥∞‡¥Ç:*
 ‚ùí /invitelink: ‡¥™‡µç‡¥∞‡µà‡¥µ‡¥±‡µç‡¥±‡µç ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥á‡µª‡¥µ‡¥ø‡¥±‡µç‡¥±‡µá‡¥∑‡µª ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µç ‡¥≤‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ..
 ‚ùí /settitle: ‡¥¨‡µã‡¥ü‡µç‡¥ü‡¥ø‡¥®‡¥æ‡µΩ ‡¥™‡µç‡¥∞‡µä‡¥Æ‡µã‡¥ü‡µç‡¥ü‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥™‡µç‡¥™‡µÜ‡¥ü‡µç‡¥ü ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç‚Äå ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª‡¥®‡µç‡¥±‡µÜ ‡¥Ö‡¥°‡µç‡¥Æ‡¥ø‡µª ‡¥ü‡µà‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µç ‡¥µ‡µá‡¥£‡µç‡¥ü‡¥ø ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ..
 ‚ùí /setgpic: ‡¥í‡¥∞‡µÅ ‡¥á‡¥Æ‡µá‡¥ú‡¥ø‡¥®‡µç ‡¥±‡¥ø‡¥™‡µç‡¥≤‡µà ‡¥Ü‡¥Ø‡¥ø ‡¥à ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µç ‡¥®‡¥ï‡µç‡¥ï‡¥ø‡¥Ø‡¥ø‡¥Ø‡¥æ‡µΩ ‡¥Ü ‡¥´‡µã‡¥ü‡µç‡¥ü‡µã ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥™‡¥ø‡¥ï‡µç‡¥ö‡µº ‡¥Ü‡¥Ø‡¥ø ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥Ç..
 ‚ùí /delgpic: ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥≤‡µÜ ‡¥®‡¥ø‡¥≤‡¥µ‡¥ø‡¥≤‡µÜ ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥™‡¥ø‡¥ï‡µç‡¥ö‡µº ‡¥°‡¥ø‡¥≤‡µÄ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥Ç..
 ‚ùí /setgtitle <‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥™‡µá‡¥∞‡µç>: ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç ‡¥™‡µÅ‡¥§‡¥ø‡¥Ø ‡¥í‡¥∞‡µÅ ‡¥™‡µá‡¥∞‡µç ‡¥®‡µΩ‡¥ï‡¥ø ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥Ç..
 ‚ùí /setsticker: ‡¥∏‡µç‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç‡¥ï‡¥±‡µÅ‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Æ‡¥±‡µÅ‡¥™‡¥ü‡¥ø‡¥Ø‡¥æ‡¥Ø‡¥ø ‡¥à ‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µç ‡¥®‡µΩ‡¥ï‡¥ø‡¥Ø‡¥æ‡µΩ ‡¥Ö‡¥§‡µç ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥∏‡µç‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç‡¥ï‡µº‡¥™‡¥æ‡¥ï‡µç‡¥ï‡µç ‡¥Ü‡¥Ø‡¥ø ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥Ç..
 ‚ùí /setdescription: <‡¥µ‡¥ø‡¥µ‡¥∞‡¥£‡¥Ç> ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡¥®‡µÜ‡¥ï‡µç‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥í‡¥∞‡µÅ ‡¥µ‡¥ø‡¥µ‡¥∞‡¥£‡¥Ç ‡¥∏‡µá‡¥µ‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µç ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ...

 ‚ö†Ô∏è ‡¥∏‡µç‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç‡¥ï‡µº ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥Æ‡µç‡¥™‡µã‡µæ ‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡¥ø‡µΩ ‡¥ï‡µÅ‡¥±‡¥û‡µç‡¥û‡¥§‡µç 100 ‡¥Æ‡µÜ‡¥Ç‡¥¨‡µá‡µº‡¥∏‡µç ‡¥é‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥â‡¥£‡µç‡¥ü‡¥æ‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Ç...
"""

__mod_name__ = "‚öôÔ∏èGROUP INFO"

PIN_HANDLER = CommandHandler("pin", pin, pass_args=True, filters=Filters.group)
UNPIN_HANDLER = CommandHandler("unpin", unpin, filters=Filters.group)
INVITE_HANDLER = CommandHandler("invitelink", invite)
CHAT_PIC_HANDLER = CommandHandler("setgpic", setchatpic, filters=Filters.group)
DEL_CHAT_PIC_HANDLER = CommandHandler(
    "delgpic", rmchatpic, filters=Filters.group)
SETCHAT_TITLE_HANDLER = CommandHandler(
    "setgtitle", setchat_title, filters=Filters.group
)
SETSTICKET_HANDLER = CommandHandler(
    "setsticker", set_sticker, filters=Filters.group)
SETDESC_HANDLER = CommandHandler(
    "setdescription",
    set_desc,
    filters=Filters.group)

PROMOTE_HANDLER = CommandHandler(
    "promote", promote, pass_args=True, filters=Filters.group
)
DEMOTE_HANDLER = CommandHandler(
    "demote",
    demote,
    pass_args=True,
    filters=Filters.group)

SET_TITLE_HANDLER = DisableAbleCommandHandler(
    "settitle", set_title, pass_args=True)
ADMINLIST_HANDLER = DisableAbleCommandHandler(
    "adminlist", adminlist, filters=Filters.group
)

dispatcher.add_handler(PIN_HANDLER)
dispatcher.add_handler(UNPIN_HANDLER)
dispatcher.add_handler(INVITE_HANDLER)
dispatcher.add_handler(PROMOTE_HANDLER)
dispatcher.add_handler(DEMOTE_HANDLER)
dispatcher.add_handler(ADMINLIST_HANDLER)
dispatcher.add_handler(SET_TITLE_HANDLER)
dispatcher.add_handler(CHAT_PIC_HANDLER)
dispatcher.add_handler(DEL_CHAT_PIC_HANDLER)
dispatcher.add_handler(SETCHAT_TITLE_HANDLER)
dispatcher.add_handler(SETSTICKET_HANDLER)
dispatcher.add_handler(SETDESC_HANDLER)
